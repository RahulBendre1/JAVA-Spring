<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<bean id="logAop" class="kr.co.iamtek.LogAop" />

	<aop:config>
		<aop:aspect id="logger" ref="logAop">
			<aop:pointcut expression="within(kr.co.iamtek.*)" id="publicM"/>
			<aop:around pointcut-ref="publicM" method="loggerAop"/>
		</aop:aspect>
		<aop:aspect id="logger" ref="logAop">
			<aop:pointcut id="publicM" expression="within(kr.co.iamtek.*)"  />
			<aop:before pointcut-ref="publicM" method="beforeAdvice" />
		</aop:aspect>
		<aop:aspect id="logger" ref="logAop">
			<aop:pointcut id="publicM" expression="within(kr.co.iamtek.*)"  />
			<aop:after-returning pointcut-ref="publicM" method="afterReturningAdvice" />
		</aop:aspect>
		<aop:aspect id="logger" ref="logAop">
			<aop:pointcut id="publicM" expression="within(kr.co.iamtek.*)"  />
			<aop:after-throwing pointcut-ref="publicM" method="afterThrowingAdvice" />
		</aop:aspect>
		<aop:aspect id="logger" ref="logAop">
			<aop:pointcut id="publicM" expression="within(kr.co.iamtek.*)"  />
			<aop:after pointcut-ref="publicM" method="afterAdvice" />
		</aop:aspect>
	</aop:config>

	<bean id="student" class="kr.co.iamtek.Student">
		<property name="name" value="홍길동"/>
		<property name="age" value="10"/>
		<property name="gradeNum" value="3"/>
		<property name="classNum" value="5"/>
	</bean>

	<bean id="worker" class="kr.co.iamtek.Worker">
		<property name="name" value="홍길순"/>
		<property name="age" value="35"/>
		<property name="job" value="개발자"/>
	</bean>

</beans>
